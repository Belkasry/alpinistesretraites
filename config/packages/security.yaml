security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                  class: App\Entity\User
                  property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # main:
        #     stateless: true
        #     anonymous: true
        #     pattern: ^/
        #     user_checker: App\Security\UserChecker
        #     provider: in_database
        #     json_login:
        #         check_path: /api/login_check
        #         username_path: username
        #         password_path: password
        #         success_handler: lexik_jwt_authentication.handler.authentication_success
        #         failure_handler: lexik_jwt_authentication.handler.authentication_failure
        #     guard:
        #         authenticators:
        #             - lexik_jwt_authentication.jwt_token_authenticator


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/account, roles: ROLE_GUIDE }
         - { path: ^/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing API documentations and Swagger UI
         - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
